version: '3'

networks:
  otel-collector:

volumes:
  grafana_data:
  clickhouse_data:

services:
  otel-collector:
    build:
      context: ../../../
      dockerfile: cmd/otel-collector/Dockerfile
    # Uncomment the next line to use a preexisting image
    # image: otelcontribcol:latest
    container_name: otel-collector
    command:
      - '--config=/etc/otel-collector-config.yaml'
      - '--set=service.telemetry.logs.level=INFO'
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - '4317:4317' # otlp receiver
      - '1888:1888' # pprof extension
      - '13133:13133' # health_check extension
      - '55679:55679' # zpages extension
      - '24224:24224' # fluentforwarder
      - '24224:24224/udp' # fluentforwarder
    depends_on:
      - qryn
      - clickhouse-server
    expose:
      - '4317:4317' # otlp receiver
    networks:
      - otel-collector

  clickhouse-server:
    image: clickhouse/clickhouse-server:22.9
    container_name: clickhouse-server
    restart: unless-stopped
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: qryn
      CLICKHOUSE_PASSWORD: demo
    ports:
      - 8123:8123
      - 19000:9000
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', '127.0.0.1:8123/ping']
      interval: 1s
      timeout: 1s
      retries: 30
    networks:
      - otel-collector

  qryn-ctrl:
    image: qxip/qryn-ctrl:latest
    container_name: qryn-ctrl
    environment:
      - CLICKHOUSE_SERVER=clickhouse-server
      - QRYN_DATABASE_DATA_0_NAME=qryn
      - QRYN_DATABASE_DATA_0_HOST=clickhouse-server
      - QRYN_DATABASE_DATA_0_PORT=9000
      - QRYN_DATABASE_DATA_0_USER=qryn
      - QRYN_DATABASE_DATA_0_PASS=demo
      - QRYN_DATABASE_DATA_0_DEBUG=true
      - QRYN_DATABASE_DATA_0_SECURE=false
      - QRYN_DATABASE_DATA_0_ASYNC_INSERT=false
    command:
      - sh
      - -c
      - ./qryn-ctrl -initialize_db
    networks:
      - otel-collector
    depends_on:
      clickhouse-server:
        condition: service_healthy
  qryn:
    image: qxip/qryn:latest
    container_name: qryn
    restart: unless-stopped
    expose:
      - 3100
    ports:
      - '3100:3100'
    environment:
      CLICKHOUSE_SERVER: clickhouse-server
      CLICKHOUSE_AUTH: qryn:demo
      NODE_OPTIONS: '--max-old-space-size=4096'
    depends_on:
      clickhouse-server:
        condition: service_healthy
    networks:
      - otel-collector

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource,vertamedia-clickhouse-datasource
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: vertamedia-clickhouse-datasource
      GF_USERS_ALLOW_SIGN_UP: false
      GF_EXPLORE_ENABLED: true
      GF_ALERTING_ENABLED: false
      GF_UNIFIED_ALERTING_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: traceToMetrics,publicDashboards,tempoApmTable
    ports:
      - '3001:3000'
    networks:
      - otel-collector

  # Log generator
  flog:
    image: mingrammer/flog:0.4.3
    command: ['--format=json', '--loop', '--delay=100ms']
    networks:
      - otel-collector
    depends_on:
      - otel-collector
    logging:
      driver: fluentd
      options:
        mode: non-blocking
        fluentd-async-connect: 'true'
        fluentd-sub-second-precision: 'true'
    stop_signal: SIGKILL

  # Traces and metrics generator
  demo-client:
    build:
      context: https://github.com/open-telemetry/opentelemetry-collector-contrib.git#:examples/demo/client
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - DEMO_SERVER_ENDPOINT=http://demo-server:7080/hello
    depends_on:
      - demo-server
    networks:
      - otel-collector
  demo-server:
    build:
      context: https://github.com/open-telemetry/opentelemetry-collector-contrib.git#:examples/demo/server
    restart: always
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
    ports:
      - "7080"
    depends_on:
      - otel-collector
    networks:
      - otel-collector
